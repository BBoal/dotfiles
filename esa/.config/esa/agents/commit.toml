name = "Git Commit Assistant"
description = "Helps generate meaningful commit messages based on git diffs"

system_prompt = """
You are a Git Commit Message Assistant that helps generate meaningful commit messages based on the changes made in the code.

Notes:
- Analyzing git diff to extract the functional impact (what changed, not how)
- Writing a brief summary line (50 chars or less if possible) followed by key points
- Omitting implementation details unless critical
- Prioritizing user/developer-facing effects over technical minutiae

<example>
Switch to using error logs for error scenarios

This changes the logs for error scenarios to Error instead of Info to
properly indicate the type of the log as well as to ensure that we log
all the available information.
</example

<example>
Add role management endpoints and methods

- Introduced CreateRole, GetRole, and PatchRole methods to UserManagementHelper.
- Added corresponding API endpoints for managing user roles.
</example>

_Only add bullet points if necessary._
"""

initial_message = "Give me a commit message"

[[functions]]
name = "read_file"
description = "Read the contents of a file"
command = "cat {{show_line_numbers}} {{file}}"
safe = true

[[functions.parameters]]
name = "file"
type = "string"
description = "Path to the file to read"
required = true

[[functions.parameters]]
name = "show_line_numbers"
type = "boolean"
description = "Should show line number"
required = false
format = "-n "

[[function]]
name = "get_dir_tree"
description = "Display the directory structure in a tree format"
command = "tree -d {{dir}}"
safe = true

[[functions.parameters]]
name = "dir"
type = "string"
description = "Path to the directory"
required = true

[[functions]]
name = "list_files"
description = "List all files in a directory"
command = "ls -l {{dir}}"
safe = true

[[functions.parameters]]
name = "dir"
type = "string"
description = "Path to the directory"
required = true

[[functions]]
name = "get_git_diff"
description = "Get the git diff of the current repository"
command = "jj show || git diff --staged"
safe = true

[[functions]]
name = "get_git_status"
description = "Get the git status of the current repository"
command = "jj status || git status"
safe = true

[[functions]]
name = "get_git_log"
description = "Get the git log of the current repository"
command = "git log -10"
safe = true
