cmd put &{{
    load=$(lf -remote 'load')
    mode=$(echo "$load" | sed -n '1p')
    list=$(echo "$load" | sed '1d')
    if [ $mode = 'copy' ]; then
        cp -rn $list .
    elif [ $mode = 'move' ]; then
        mv -n $list .
    fi
    lf -remote "$(printf 'save\nmove\n\n')"
    lf -remote 'send load'
    lf -remote 'send sync'
}}

# map <space> $qlmanage -p "$f" > /dev/null 2> /dev/null
# map <enter> toggle

map e $$EDITOR "$f"
map i $bat --paging always "$f"
map m $qlmanage -p "$f" > /dev/null 2> /dev/null

map S $$SHELL

# execute current file (must be executable)
map x $$f
map X !$f

map <enter> shell
map P put-async

cmd trash %echo "$fx" | while read -r j; do trash "$j" ; done
map D %echo "$fx" | while read -r j; do trash "$j" ; done

map f $lf -remote "send $id select $(fzf)"

# rename current file without overwrite
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
map r push :rename<space>

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
