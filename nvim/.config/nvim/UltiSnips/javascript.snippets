snippet frcc "Flow React Class Component" b
// @flow
import * as React from 'react'
import './${2:$1}.css'

type Props ={}
type State = {}

class ${1:`!v expand('%:t:r')`} extends React.Component<Props, State> {
	render(): React.Node {
		return (
			<div className='$1'>
				$3
			</div>
		)
	}
}

export default $1
endsnippet

snippet nrcc "React Class Compnent"
import React, { Component} from 'react';
import styles from './${2:$1}.css';

class ${1:`!v expand('%:t:r')`} extends Component {
	render() {
		return (
			<div className='$1'>

			</div>
		);
	}
}

export default $1;
endsnippet

snippet ss "React set state" b
this.setState({
	...this.state,
	$1
})
endsnippet

snippet bf "React bind function" b
self.$1 = self.$1.bind(this)
endsnippet

snippet cim "React component import" b
import $1 from '../$1/$1'
endsnippet

snippet conn "React component import" b
constructor(props) {
	super(props)
}
endsnippet

snippet con "React component import" b
constructor(props: Props) {
	super(props)
}
endsnippet

snippet c "Simple console.log" b
console.log($1)
endsnippet

snippet ecs "Export with connect and state" b
export default connect(mapStateToProps)($1)
endsnippet

snippet ecd "Export with connect and dispatch" b
export default connect( (): {} => { return {} }, mapDispatchToProps)($1)
endsnippet

snippet pp "this.props" b
this.props.
endsnippet

snippet d "Destructuring" b
const {$1} = $2
endsnippet

snippet ls "let self" b
let self: any = this // eslint-disable-line
endsnippet
