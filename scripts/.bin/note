#!/bin/sh

NOTES_FOLDER="$HOME/.notes"
mkdir -p "$NOTES_FOLDER/.trash"
mkdir -p "$NOTES_FOLDER/stash"

get_dated_file() {
    files=$(cat /dev/stdin)
    for file in $files; do
        echo "$(basename "$file") $(date -r "$file" | sed 's| |-|g')"
    done
}

get_file_name() {
    for file in "$NOTES_FOLDER"/*.md; do
        echo "$file"
    done | grep -vE '/todo[^/]*$' | xargs ls -t1 | get_dated_file | column -t |
        fzf --multi --query "$*" --preview "echo '{}' | awk '{print \$1}' | xargs -I{} bat -p --color always $NOTES_FOLDER/{}" |
        cut -d' ' -f1
}

open_note() {
    get_file_name "$@" | xargs -L1 -I{} "$EDITOR" "$NOTES_FOLDER/{}"
}

new_note() {
    if [ -z "$1" ]; then
        printf "Name for new note: "
        read -r INPUT
        NAME="$(echo "$INPUT" | sed 's| |-|g')"
    else
        NAME="$(echo "$*" | sed 's| |-|g')"
    fi
    "$EDITOR" "$NOTES_FOLDER/$NAME.md"
}

trash_note() {
    NAME="$(get_file_name "$@")"
    for n in $NAME; do
        mv "$NOTES_FOLDER/$n" "$NOTES_FOLDER/.trash/$n"
    done
}

stash_note() {
    NAME="$(get_file_name "$@")"
    for n in $NAME; do
        mv "$NOTES_FOLDER/$n" "$NOTES_FOLDER/stash/$n"
    done
}

if [ "$1" = "new" ]; then
    shift
    new_note "$*"
    cd "$NOTES_FOLDER" && git status --short
elif [ "$1" = "rm" ]; then
    shift
    trash_note "$*"
    cd "$NOTES_FOLDER" && git status --short
elif [ "$1" = "stash" ]; then
    # stash away fies that are always needed
    shift
    stash_note "$*"
    cd "$NOTES_FOLDER" && git status --short
elif [ "$1" = "sync" ]; then
    cd "$NOTES_FOLDER" &&
        git add . && git commit -m '[autocommit] updating notes' && git push origin master
elif [ "$1" = "status" ]; then
    cd "$NOTES_FOLDER" &&
        git status --short
else
    open_note "$*"
    cd "$NOTES_FOLDER" && git status --short
fi
