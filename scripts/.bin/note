#!/bin/sh

NOTES_FOLDER="$HOME/.notes"
mkdir -p "$NOTES_FOLDER/archive"
cd "$NOTES_FOLDER" || echo "Notes folder does not seem to exist" || exit 1

new() {
    FOLDER="note"
    [ -n "$1" ] && FOLDER="$1"
    mkdir -p "$FOLDER"

    if [ -n "$2" ]; then
        NAME="$(echo "$2" | sed 's| |-|g')"
    else
        printf "New %s: " "$FOLDER"
        read -r
        NAME="$(echo "$REPLY" | sed 's| |-|g')"
    fi

    if [ "$FOLDER" = "quote" ]; then
        printf "Content: "
        read -r
        echo "$REPLOY" >"$FOLDER/$NAME.md"
    else
        "$EDITOR" "$FOLDER/$NAME.md"
    fi
}

pick() {
    if [ -z "$1" ]; then
        IGNORE_PATTERN="archive|temp|task-notes|resources|todo"
        find . -name '*.md' -mindepth 2 |
            grep -vE "/($IGNORE_PATTERN)/" | xargs ls -td1 | sed "s|^./||" |
            fzf --no-sort --multi --query "$2" --preview "bat '{}'"
    else
        ls -t "$1"/*.md |
            fzf --no-sort --multi --query "$2" --preview "bat '{}'"
    fi
}

list() {
    pick "$1" "$2" | xargs "$EDITOR"
}

archive() {
    pick "$1" "$2" |
        while read -r n; do
            echo "archive/$(dirname "$n")"
            mkdir -p "archive/$(dirname "$n")"
            mv "$n" "archive/$n"
        done
}

case "$1" in
"new") new "$2" ;;
"temp") new temp "$(xxd -l5 -ps /dev/urandom)" ;;
"stash") new stash "$2" ;;
"idea") new idea "$2" ;;
"quote") new quote "$(xxd -l5 -ps /dev/urandom)" ;;
"list") list "$2" "$3" ;;
"view") lf "$2" ;;
"archive") archive "$2" "$3" ;;
"commit") ;;  # just for backwards compatability
*) list note ;;
esac

(git add . && git commit -m '[autocommit] updating notes') 1>/dev/null 2>&1 || true
(git push origin master &) 1>/dev/null 2>&1 || true
