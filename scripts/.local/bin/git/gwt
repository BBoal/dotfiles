#!/bin/sh

# Simplifying worktree stuff

set -e

branch="$1"
if [ -z "$1" ]; then
	branch="$(git branch --sort=-committerdate | grep '^  ' | sed 's/^  //' | fzf)"
fi

pushd "$(git rev-parse --show-toplevel 2>/dev/null)" || exit 1
proj="$(basename "$PWD")"

if [ "$1" = "prune" ]; then
	[ -z "$(git worktree list | grep -v "\[$(git rev-parse --abbrev-ref HEAD)\]$")" ] &&
		echo No worktrees to prune && exit 1
	FORCE=""
	[ "$2" = "-f" ] && FORCE="-f"
	git worktree list | grep -v "\[$(git rev-parse --abbrev-ref HEAD)\]$" |
		fzf -m | awk '{print $1}' | xargs -n1 git worktree remove $FORCE
	git worktree prune
	exit 0
fi

dir="../gwt--$proj--$branch"
git worktree add "$dir" "$branch"

# copy nix files
[ ! -f "$dir/shell.nix" ] && [ -f shell.nix ] && cp shell.nix "$dir/shell.nix"
[ ! -f "$dir/.envrc" ] && [ -f .envrc ] && cp .envrc "$dir/.envrc"
[ ! -f "$dir/.dir-locals.el" ] && [ -f .dir-locals.el ] && cp .dir-locals.el "$dir/.dir-locals.el"
[ ! -d "$dir/.mscripts" ] && [ -d .mscripts ] && cp -r .mscripts "$dir/.mscripts"

echo Created new worktree at "$dir"
# TODO: might have to be a func so that we can cd at the end
