#!/bin/sh

set -e

url="$1"
[ -z "$url" ] && url="$(pbpaste)"

if ! echo "$url" | grep -qE '^https?://'; then
    echo "$url" | mdclip
    exit 0
fi

get_title() {
    # https://github.com/ericchiang/pup/issues/8#issuecomment-66903085
    curl -s "$1" | pup --charset utf-8 --plain 'head title text{}'
}

if echo "$url" | grep -qE '^https://github.com/[^/]*/[^/]*/issues'; then
    printf "%s" "$url" | sed "s|https://github.com/\([^/]*/[^/]*\)/issues/\([0-9]*\)|[\1#\2]($url)|"
elif echo "$url" | grep -qE '^https://github.com/[^/]*/[^/]*/pull'; then
    printf "%s" "$url" | sed "s|https://github.com/\([^/]*/[^/]*\)/pull/\([0-9]*\)|[\1#\2]($url)|"
elif echo "$url" | grep -qE '^https://github.com/[^/]*/[^/]*/commit'; then
    printf "%s" "$url" | sed "s|https://github.com/\([^/]*/[^/]*\)/commit/\([0-9a-z]\{7\}\).*|[\1\@\2]($url)|"
elif echo "$url" | grep -qE '^https://github.com/[^/]*/[^/]*/actions/runs'; then
    printf "%s" "$url" | sed "s|https://github.com/\([^/]*/[^/]*\)/actions/runs/\([0-9]*\)|[\1:\2]($url)|"
elif echo "$url" | grep -qE '^https://github.com/[^/]*/[^/]*/blob'; then
    printf "%s" "$url" | sed "s|https://github.com/\([^/]*/[^/]*\)/blob/\([^/]*\)/.*/\(.*\)|[\1:\3]($url)|"
elif echo "$url" | grep -qE '^https://github.com/[^/]*/[^/]*/?$'; then
    printf "%s" "$url" | sed "s|https://github.com/\([^/]*/[^/$]*\)|[\1]($url)|"
elif echo "$url" | grep -qE '^https://linear.app/[^/]*/issue/[^/]*/[^/]*$'; then
    printf "%s" "$url" | sed "s|https://linear.app/\([^/]*\)/issue/\([^/]*\)/\([^/]*\)|[\2]($url)|"
elif echo "$url" | grep -qE '^https://app.incident.io/[^/]*/incidents/[0-9]*'; then
    printf "%s" "$url" | sed "s|https://app.incident.io/\([^/]*\)/incidents/\([0-9]*\)|[incident #\2]($url)|"
elif echo "$url" | grep -qE '^https://.*\.atlassian\.net/browse/.*$'; then
    url="$(echo "$url" | sed "s|\?atlOrigin=[a-zA-Z0-9]*$||")"
    printf "%s" "$url" | sed "s|https://.*/browse/\([^/]*\)|[\1]($url)|"
elif echo "$url" | grep -qE '^https://teams.microsoft.com'; then
    # Using sed here was causing issues
    team="$(echo "$url" | grep -o 'teamName=[^&]*' | cut -d= -f2)"
    channel="$(echo "$url" | grep -o 'channelName=[^&]*' | cut -d= -f2)"
    printf "[%s](%s)" "$team#$channel" "$url"
else
    # TODO: Make this generic work even if path is changed
    # Using FF based way to get the title makes it faster as well as
    # let us fetch names of pages which will need authentication to
    # get the names.
    title="$(dejsonlz4 "$HOME/Library/Application Support/Firefox/Profiles/68pk86vd.default-release/sessionstore-backups/recovery.jsonlz4" |
        jq -r '.windows[].tabs[].entries[] | "\(.url) \(.title)"' |
        grep "$url" | head -n1 | cut -d' ' -f2-)"

    if [ -n "$title" ]; then
        if echo "$title" | grep -q "^http"; then
            # Some tabs end up reporting title as the url
            title=""
        fi
    fi

    if [ -z "$title" ]; then
        title="$(get_title "$url" | sed 's| - YouTube$||')"
    fi

    [ -z "$title" ] && title="$url"
    printf "[%s](%s)" "$title" "$url"
fi | tee /tmp/linkify | mdclip

title="$(cat /tmp/linkify | sed 's|.*\[\(.*\)\](.*)|\1|')"
notify "$title" "$url"
cat /tmp/linkify
