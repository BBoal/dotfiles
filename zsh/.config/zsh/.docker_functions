#!/bin/sh

db() {
    if [ -z "$1" ]
    then
        docker build .
        IMG_ID=$(docker images --format "{{.ID}}" | head -n1)
        echo "$IMG_ID" | pbcopy
        # notify "Docker build complete. ($IMG_ID)"
    else
        docker build -t "$1" .
    fi
}

dr() {
    if [ -z "$1" ]
    then
        docker run -it "$(docker images --format "{{.ID}}\n{{.Repository}}" | grep -v '<none>' | fzf)"
    else
        docker run -it "$1"
    fi
}

dbr() {
    TAG="$RANDOM"
    if docker build -t "$TAG" .; then
        docker run "$@" -it "$TAG"
    fi
}

dbp() {
    [ -z "$1" ] && echo "Specify tag" && return 1
    if docker build -t "$1" .; then
        docker push "$1"
    fi
}

gdbp() {
    [ -z "$1" ] && echo "Specify tag" && return 1
    if docker build -t "$CONTAINER_REGISTERY/$1" .; then
        docker push "$CONTAINER_REGISTERY/$1"
    fi
}

# connect to a running docker container
dcon(){
    CONTAINER=$(docker ps --format 'table {{.ID}}\t{{.Status}}\t{{.Command}}' | tail -n +2 | grep -v '/portainer' | fzf | sed 's/\ .*//g')
    docker exec -i -t "$CONTAINER" bash
}

docker_testground(){
    if [ -z "$1" ];then
        1="$(docker images | grep -v '<none>' | tail -n+2 | head | awk '{print $1":"$2}' | fzf)"
    fi
    GROUND="$1" && shift
    if echo "$GROUND" | grep ':' > /dev/null 2>&1;then
        IMAGE="$GROUND"
    else
        TAG="$(curl -sk "https://registry.hub.docker.com/v1/repositories/$GROUND/tags" | jq -r '.[].name' | fzf)"
        if [ -z "$TAG" ];then
            return 1
        fi
        IMAGE="$GROUND:$TAG"
    fi
    docker run -v "$(pwd):/code" -it "$IMAGE" bash
}
