#!/bin/sh

# speed up video by 2X
faster() {
	faster_filename=$(echo "$1" | sed 's/\..*$/2x.mp4/g')
	ffmpeg -i "$1" -filter:v "setpts=0.5*PTS" "$faster_filename"
}

# Decrease file size using H.264
smallify() {
	ffmpeg -i "$1" -vcodec libx264 -acodec aac "$1".mp4
}

# Conver webm to mp3 ( used with spotifydl )
webmmp3() {
	for FILE in *.webm; do
		echo -e "Processing video '\e[32m$FILE\e[0m'"
		ffmpeg -i "${FILE}" -vn -ab 128k -ar 44100 -y "${FILE%.webm}.mp3"
	done
}

# Conver m4a to mp3 ( used with spotifydl )
m4amp3() {
	for FILE in *.m4a; do
		echo -e "Processing video '\e[32m$FILE\e[0m'"
		ffmpeg -i "${FILE}" -vn -ab 128k -ar 44100 -y "${FILE%.m4a}.mp3"
	done
}

ffmpeg_giffify() {
	ffmpeg -i "$1" \
		-filter_complex "[0:v] fps=10,scale=720:-1,split [a][b];[a] palettegen [p];[b][p] paletteuse" \
		"$1".gif
}

ffmpeg_grainify() {
	convert "$1" -resize 1920x1080^ -gravity center -extent 1920x1080 -quality 90 /tmp/grainify.jpg
	ffmpeg -y -loop 1 -i /tmp/grainify.jpg -f lavfi -i color=s=3840x2160 -filter_complex "[0]scale=3840x2160,fps=60[a];[a]unsharp=3:3:-1.7,noise=alls=85:allf=t+u[b];[1][b]scale2ref,overlay=y='if(mod(t,16), 2)':x='if(mod(t,8), 3)'[c];[c]scale=1920x1080" -c:v libx264 -qp 30 -t 60 grainified-"$1".mp4
}

ffmpeg-rotate(){
    # https://ostechnix.com/how-to-rotate-videos-using-ffmpeg-from-commandline/
	[ -z "$2" ] && echo "Usage: $0 <rotate-amount> <infile> <outfile>" && return 1
	case "$2" in
		90) ffmpeg -i "$1" -vf "transpose=1" output.mp4 ;;
		270) ffmpeg -i "$1" -vf "transpose=2" output.mp4 ;;
		180) ffmpeg -i "$1" -vf "transpose=2,transpose=2" output.mp4 ;;
		*) echo "I only know how to rotate 90, 180 and 270" && return 1 ;;
	esac
}
