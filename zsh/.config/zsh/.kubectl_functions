#!/bin/sh

alias kalf='kubectl apply -f'

kpods() {
	kubectl get pods | tail -n +2 | awk '{print $3,$1}' | fzf --query "$*" | cut -d' ' -f2
}

klog() {
	kpods "$*" | xargs kubectl logs --tail=130 -f
}

kdel() {
	kubectl get pods | tail -n +2 | awk '{print $3,$1}' |
		fzf --query "$*" -m | cut -d' ' -f2 |
		xargs -n1 kubectl delete pod
}

kshell() {
	kubectl exec -it "$(kpods "$*")" -- sh -c 'clear; (bash || ash || sh)'
}

kall() {
	kubectl get all | grep '/' | cut -d' ' -f1 | fzf --query "$*"
}

kdesc() {
	kall "$*" | xargs kubectl describe
}

kdeljobs() {
  kubectl delete pod --field-selector=status.phase==Succeeded -n "$1"
  kubectl delete pod --field-selector=status.phase==Failed -n "$1"
}

k_change_namespace() {
	NAMESPCE="$(kubectl get namespace | tail -n+2 | fzf --query "$1" | cut -d' ' -f1)"
	[ -z "$NAMESPCE" ] && return 0
	kubectl config set-context --current --namespace="$NAMESPCE"
}

k_change_context() {
	kubectl config get-contexts | grep -v '^*' | tail -n+2 | awk '{print $1,"   ",$4}' |
		fzf --preview "echo Current context: $(kubectl config current-context)" --preview-window up:1 |
		awk '{print $1}' | xargs kubectl config use-context
}

alias kp="kubectl get pods"
alias wk="watch kubectl get pods,service,hpa"
alias wkp="watch kubectl get pods"
alias wkt="watch kubectl top nodes"
alias kns="kubectl config view --minify --output 'jsonpath={..namespace}'"
