#! /bin/zsh

# Function for transfer.sh
transfer() {
    if [ $# -eq 0 ]; then
	echo "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md";
	return 1;
    fi
    tmpfile=$( mktemp -t transferXXX );
    if tty -s; then
	basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g');
	curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile;
    else
	curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ;
    fi;
    cat $tmpfile;
    rm -f $tmpfile;
}

# run prev commands
get_prev_command(){
    history | tail "-$1"  | head "-$2" | awk '{ $1=$2=$3=""; print $0 }' | sed s:^...::g
}
alias ff='$(get_prev_command 2 1)'
alias fff='$(get_prev_command 3 2)'

stdgrip() {
    grip $1 --export -
}

gifup(){
    # gifigy: https://github.com/vvo/gifify
    # imgur-uploader: https://github.com/meain/imgur-uploader
    timestamp="$(date +"%T")"
    gifify $1 -o /tmp/$timestamp && imgur-uploader /tmp/$timestamp
}

rd () {
    tmp="$(mktemp)"
    lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
	dir="$(cat "$tmp")"
	\rm -f "$tmp"
	if [ -d "$dir" ]; then
	    if [ "$dir" != "$(pwd)" ]; then
		cd "$dir"
	    fi
	fi
    fi
}

# ngrok alternative
servo(){
    if [ -z $2 ]; then
	ssh -R 80:localhost:$1 serveo.net
    else
	ssh -R $2:80:localhost:$1 serveo.net
    fi
}

# if no args, upload latest screenshot
imgur(){
    if [ -z $1 ];then
	command imgur "$(ls -Art -d ~/Documents/Screenshots/* | tail -n 1)"
    else
	command imgur $1
    fi
}

notify(){
    if [ -z $1 ];then
	osascript -e "display notification \"Task complete!\" with title \"Notification\""
    else
	osascript -e "display notification \"$1\" with title \"Notification\""
    fi
}

root(){
    . cd $(git rev-parse --show-toplevel 2> /dev/null)
}

# tree with gitignore
function gtree {
    git_ignore_files=("$(git config --get core.excludesfile)" .gitignore ~/.gitignore)
    ignore_pattern="$(grep -hvE '^$|^#' "${git_ignore_files[@]}" 2>/dev/null|sed 's:/$::'|tr '\n' '\|')"
    if git status &> /dev/null && [[ -n "${ignore_pattern}" ]]; then
      tree -I "${ignore_pattern}" "${@}"
    else
      tree "${@}"
    fi
}
